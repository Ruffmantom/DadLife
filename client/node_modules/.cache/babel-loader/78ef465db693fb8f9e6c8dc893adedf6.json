{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nvar queryURL = \"https://icanhazdadjoke.com/\";\nconst jokes = [\"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\"];\nexport default function JokePage() {\n  const [JData, setJData] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    let jokes = [];\n\n    for (var i = 0; i < 10; i++) {\n      fetch(queryURL).then(res => {\n        var joke = res.json();\n        jokes.push(joke);\n      });\n    }\n\n    setJData(jokes);\n    setLoaded(true);\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Dad Jokes\",\n    page: \"dlj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, loaded ? JData.map((j, i) => /*#__PURE__*/React.createElement(Jokecard, {\n    joke: j,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })) : \"\");\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js"],"names":["React","useState","useEffect","Layout","Jokecard","queryURL","jokes","JokePage","JData","setJData","error","setError","loaded","setLoaded","i","fetch","then","res","joke","json","push","map","j"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,IAAIC,QAAQ,GAAG,6BAAf;AACA,MAAMC,KAAK,GAAG,CACZ,qDADY,EAEZ,qDAFY,EAGZ,qDAHY,EAIZ,qDAJY,EAKZ,qDALY,EAMZ,qDANY,EAOZ,qDAPY,EAQZ,qDARY,EASZ,qDATY,EAUZ,qDAVY,CAAd;AAYA,eAAe,SAASC,QAAT,GAAoB;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAII,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAC,EAAhB,EAAmBA,CAAC,EAApB,EAAuB;AACrBC,MAAAA,KAAK,CAACV,QAAD,CAAL,CACCW,IADD,CACMC,GAAG,IAAE;AACT,YAAIC,IAAI,GAAGD,GAAG,CAACE,IAAJ,EAAX;AACAb,QAAAA,KAAK,CAACc,IAAN,CAAWF,IAAX;AACD,OAJD;AAKD;;AACDT,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACAO,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAXQ,EAWP,EAXO,CAAT;AAeA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,IAAI,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,GAAEJ,KAAK,CAACa,GAAN,CAAU,CAACC,CAAD,EAAIR,CAAJ,kBACjB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEQ,CAAhB;AAAmB,IAAA,GAAG,EAAER,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAF,GAEH,EAHN,CADF;AAOD","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nvar queryURL = \"https://icanhazdadjoke.com/\";\nconst jokes = [\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n];\nexport default function JokePage() {\n\n  const [JData, setJData] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(()=>{\n    let jokes = [];\n    for(var i = 0;i<10;i++){\n      fetch(queryURL)\n      .then(res=>{\n        var joke = res.json()\n        jokes.push(joke)\n      })\n    }\n    setJData(jokes)\n    setLoaded(true)\n  },[])\n\n \n\n  return (\n    <Layout title=\"Dad Jokes\" page=\"dlj\">\n      {loaded? JData.map((j, i) => (\n        <Jokecard joke={j} key={i} />\n      )): \"\"}\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}