{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/components/userComponents/CreatePostModal/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { postPosts } from \"../../../core/jokeSearch\";\nimport { IMGBBAPI_KEY, IMGBBAPI } from \"../../../config\";\nimport Axios from \"axios\";\nimport \"./style.css\";\nimport closeIcon from \"../../../assets/images/newicons/closeIcon.svg\"; // getting redux store\n\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"../../../actions\";\nexport default function CreatePostModal({\n  userPostsId,\n  token,\n  curUserName\n}) {\n  // make sure to import dispatch so that you can use the actions.\n  const dispatch = useDispatch();\n  const defaultImg = \"https://www.plextek.com/wp-content/uploads/default-placeholder-1024x1024-500x500-1.png\";\n  const [textValue, setTextValue] = useState(\"\"); // const [imgValues, setImgValues] = useState(\"\");\n  // const [uploadedImg, setUploadedImg] = useState(\"\");\n\n  const [loaded, setLoaded] = useState(false); // const [imgStyles, setImgStyles] = useState(\"\");\n  // const styles = {\n  //   width: {\n  //     height: \"auto\",\n  //     width: \"100%\",\n  //     marginTop: \"-25%\",\n  //   },\n  //   height: {\n  //     height: \"100%\",\n  //     width: \"auto\",\n  //   },\n  // };\n\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n  }; // const handleImgChange = (event) => {\n  //   setImgValues(event.target.files[0]);\n  // };\n  /// --------- SAVE FOR USER EDIT TO ADD IMAGE --------\n  // const imgFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   const formData = new FormData();\n  //   formData.append(\"image\", imgValues);\n  //   var imgQuery = `${IMGBBAPI}?key=${IMGBBAPI_KEY}`;\n  //   Axios.post(imgQuery, formData)\n  //     .then((res) => {\n  //       setUploadedImg(res.data.data.url);\n  //     })\n  //     .then(() => {\n  //       setLoaded(true);\n  //     });\n  // };\n  /// --------- SAVE FOR USER EDIT TO ADD IMAGE --------\n\n\n  const postSubmit = e => {\n    e.preventDefault();\n    console.log(\"posting form\");\n  }; // const handlePreveiwSize = (name) => {\n  //   console.log(name);\n  //   if (name === \"height\") {\n  //     setImgStyles(styles.height);\n  //   } else {\n  //     setImgStyles(styles.width);\n  //   }\n  // };\n\n\n  const submitPost = e => {\n    e.preventDefault();\n    const postData = {\n      posterId: userPostsId,\n      userName: curUserName,\n      postText: textValue\n    };\n    postPosts(userPostsId, token, postData);\n    setTextValue(\"\"); // setImgValues(\"\");\n    // setUploadedImg(\"\");\n\n    setLoaded(false); // setImgStyles(\"\");\n\n    dispatch(closeModal(false));\n  };\n\n  const formComp = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cp-f-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, !loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cp-f-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"post-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Just like my Daddy used to say...\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"add-post-text-cont\",\n      onSubmit: e => postSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"post-text\",\n      typeof: \"text\",\n      onChange: e => handleTextChange(e),\n      maxLength: \"150\",\n      placeholder: \"Type your Dad joke here...\",\n      value: textValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      typeof: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Post\"))) : // <div className=\"\">\n    //   <div className=\"img-preview-cont\">\n    //     <img\n    //       className=\"preview-img\"\n    //       style={loaded && imgStyles ? imgStyles : { height: \"100%\" }}\n    //       src={loaded && uploadedImg ? uploadedImg : defaultImg}\n    //       alt=\"\"\n    //     />\n    //   </div>\n    //   <div className=\"edit-img-btn-cont\">\n    //     <button\n    //       onClick={() => handlePreveiwSize(\"width\")}\n    //       className=\"width-btn\"\n    //     >\n    //       Width\n    //     </button>\n    //     <p>Size By</p>\n    //     <button\n    //       onClick={() => handlePreveiwSize(\"height\")}\n    //       className=\"height-btn\"\n    //     >\n    //       Height\n    //     </button>\n    //   </div>\n    //   <form\n    //     className=\"add-post-text-cont\"\n    //     onSubmit={(e) => submitPost(e)}\n    //   >\n    //     <textarea\n    //       typeof=\"text\"\n    //       onChange={(e) => handleTextChange(e)}\n    //       maxLength=\"150\"\n    //       value={textValue}\n    //     ></textarea>\n    //     <button typeof=\"submit\">Post</button>\n    //   </form>\n    // </div>\n    \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cp-modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => dispatch(closeModal(false)),\n    className: \"cp-modal-close\",\n    src: closeIcon,\n    alt: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), formComp());\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/components/userComponents/CreatePostModal/index.js"],"names":["React","useState","useEffect","postPosts","IMGBBAPI_KEY","IMGBBAPI","Axios","useDispatch","closeModal","CreatePostModal","userPostsId","token","curUserName","dispatch","defaultImg","textValue","setTextValue","loaded","setLoaded","handleTextChange","event","target","value","postSubmit","e","preventDefault","console","log","submitPost","postData","posterId","userName","postText","formComp","closeIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { postPosts } from \"../../../core/jokeSearch\";\nimport { IMGBBAPI_KEY, IMGBBAPI } from \"../../../config\";\nimport Axios from \"axios\";\nimport \"./style.css\";\nimport closeIcon from \"../../../assets/images/newicons/closeIcon.svg\";\n// getting redux store\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"../../../actions\";\n\nexport default function CreatePostModal({ userPostsId, token, curUserName }) {\n  // make sure to import dispatch so that you can use the actions.\n  const dispatch = useDispatch();\n  const defaultImg =\n    \"https://www.plextek.com/wp-content/uploads/default-placeholder-1024x1024-500x500-1.png\";\n  const [textValue, setTextValue] = useState(\"\");\n  // const [imgValues, setImgValues] = useState(\"\");\n  // const [uploadedImg, setUploadedImg] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  // const [imgStyles, setImgStyles] = useState(\"\");\n  // const styles = {\n  //   width: {\n  //     height: \"auto\",\n  //     width: \"100%\",\n  //     marginTop: \"-25%\",\n  //   },\n  //   height: {\n  //     height: \"100%\",\n  //     width: \"auto\",\n  //   },\n  // };\n  const handleTextChange = (event) => {\n    setTextValue(event.target.value);\n  };\n  // const handleImgChange = (event) => {\n  //   setImgValues(event.target.files[0]);\n  // };\n  /// --------- SAVE FOR USER EDIT TO ADD IMAGE --------\n  // const imgFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   const formData = new FormData();\n  //   formData.append(\"image\", imgValues);\n  //   var imgQuery = `${IMGBBAPI}?key=${IMGBBAPI_KEY}`;\n  //   Axios.post(imgQuery, formData)\n  //     .then((res) => {\n  //       setUploadedImg(res.data.data.url);\n  //     })\n  //     .then(() => {\n  //       setLoaded(true);\n  //     });\n  // };\n  /// --------- SAVE FOR USER EDIT TO ADD IMAGE --------\n  const postSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"posting form\");\n  };\n  // const handlePreveiwSize = (name) => {\n  //   console.log(name);\n  //   if (name === \"height\") {\n  //     setImgStyles(styles.height);\n  //   } else {\n  //     setImgStyles(styles.width);\n  //   }\n  // };\n  const submitPost = (e) => {\n    e.preventDefault();\n    const postData = {\n      posterId: userPostsId,\n      userName: curUserName,\n      postText: textValue,\n    };\n    postPosts(userPostsId, token, postData);\n    setTextValue(\"\");\n    // setImgValues(\"\");\n    // setUploadedImg(\"\");\n    setLoaded(false);\n    // setImgStyles(\"\");\n    dispatch(closeModal(false));\n  };\n  const formComp = () => {\n    return (\n      <div className=\"cp-f-cont\">\n        {!loaded ? (\n          <div className=\"cp-f-div\">\n            <h3 className=\"post-title\">Just like my Daddy used to say...</h3>\n            <form className=\"add-post-text-cont\" onSubmit={(e) => postSubmit(e)}>\n              <textarea\n              className=\"post-text\"\n                typeof=\"text\"\n                onChange={(e) => handleTextChange(e)}\n                maxLength=\"150\"\n                placeholder=\"Type your Dad joke here...\"\n                value={textValue}\n              ></textarea>\n              <button typeof=\"submit\">Post</button>\n            </form>\n          </div>\n        ) : (\n          // <div className=\"\">\n          //   <div className=\"img-preview-cont\">\n          //     <img\n          //       className=\"preview-img\"\n          //       style={loaded && imgStyles ? imgStyles : { height: \"100%\" }}\n          //       src={loaded && uploadedImg ? uploadedImg : defaultImg}\n          //       alt=\"\"\n          //     />\n          //   </div>\n          //   <div className=\"edit-img-btn-cont\">\n          //     <button\n          //       onClick={() => handlePreveiwSize(\"width\")}\n          //       className=\"width-btn\"\n          //     >\n          //       Width\n          //     </button>\n          //     <p>Size By</p>\n          //     <button\n          //       onClick={() => handlePreveiwSize(\"height\")}\n          //       className=\"height-btn\"\n          //     >\n          //       Height\n          //     </button>\n          //   </div>\n          //   <form\n          //     className=\"add-post-text-cont\"\n          //     onSubmit={(e) => submitPost(e)}\n          //   >\n          //     <textarea\n          //       typeof=\"text\"\n          //       onChange={(e) => handleTextChange(e)}\n          //       maxLength=\"150\"\n          //       value={textValue}\n          //     ></textarea>\n          //     <button typeof=\"submit\">Post</button>\n          //   </form>\n          // </div>\n          \"\"\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"cp-modal-overlay\">\n      <img\n        onClick={() => dispatch(closeModal(false))}\n        className=\"cp-modal-close\"\n        src={closeIcon}\n        alt=\"#\"\n      />\n      {formComp()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}