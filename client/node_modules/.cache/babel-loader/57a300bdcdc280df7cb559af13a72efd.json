{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nimport { getJokes } from \"../../core/jokeSearch\"; // const jokes = [\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n// ];\n\nexport default function JokePage() {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const loadData = () => {\n    setData(getJokes());\n    setLoaded(true);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Dad Jokes\",\n    page: \"dlj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, loaded ? data.map((j, i) => /*#__PURE__*/React.createElement(Jokecard, {\n    joke: j,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })) : \"\");\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js"],"names":["React","useState","useEffect","Layout","Jokecard","getJokes","JokePage","data","setData","error","setError","loaded","setLoaded","loadData","map","j","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMY,QAAQ,GAAG,MAAM;AACrBL,IAAAA,OAAO,CAACH,QAAQ,EAAT,CAAP;AACAO,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,QAAQ;AAET,GAHQ,EAGP,EAHO,CAAT;AAOA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,IAAI,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,GAAEJ,IAAI,CAACO,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBAChB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,CAAhB;AAAmB,IAAA,GAAG,EAAEC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAF,GAEH,EAHN,CADF;AAOD","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nimport { getJokes } from \"../../core/jokeSearch\";\n// const jokes = [\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n// ];\nexport default function JokePage() {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  const loadData = () => {\n    setData(getJokes());\n    setLoaded(true)\n  };\n\n  useEffect(()=>{\n    loadData();\n\n  },[])\n\n \n\n  return (\n    <Layout title=\"Dad Jokes\" page=\"dlj\">\n      {loaded? data.map((j, i) => (\n        <Jokecard joke={j} key={i} />\n      )): \"\"}\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}