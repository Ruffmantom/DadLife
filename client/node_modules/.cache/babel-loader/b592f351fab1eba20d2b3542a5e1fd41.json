{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nvar queryURL = \"https://icanhazdadjoke.com/\"; // const jokes = [\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n// ];\n\nexport default function JokePage() {\n  const [jokeList, setJokeList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(queryURL, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      setJokeList(res.json());\n      setLoaded(true);\n    });\n  }, [loaded]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Dad Jokes\",\n    page: \"dlj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jokecard, {\n    joke: JSON.stringify(jokeList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js"],"names":["React","useState","useEffect","Layout","Jokecard","queryURL","JokePage","jokeList","setJokeList","error","setError","loaded","setLoaded","fetch","method","headers","Accept","then","res","json","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,IAAIC,QAAQ,GAAG,6BAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACR,QAAD,EAAW;AACdS,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFK,KAAX,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACfV,MAAAA,WAAW,CAACU,GAAG,CAACC,IAAJ,EAAD,CAAX;AACAP,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KARD;AASD,GAVQ,EAUP,CAACD,MAAD,CAVO,CAAT;AAYA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,IAAI,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAES,IAAI,CAACC,SAAL,CAAed,QAAf,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nvar queryURL = \"https://icanhazdadjoke.com/\";\n// const jokes = [\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n// ];\nexport default function JokePage() {\n  const [jokeList, setJokeList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(queryURL, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }).then((res) => {\n      setJokeList(res.json());\n      setLoaded(true);\n    });\n  },[loaded]);\n\n  return (\n    <Layout title=\"Dad Jokes\" page=\"dlj\">\n      <Jokecard joke={JSON.stringify(jokeList)} /> \n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}