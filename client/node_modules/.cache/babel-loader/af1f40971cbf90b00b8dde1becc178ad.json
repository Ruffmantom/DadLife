{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nvar queryURL = \"https://icanhazdadjoke.com/\"; // const jokes = [\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n// ];\n\nexport default function JokePage() {\n  const [jokeList, setJokeList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(queryURL).then(res => setJokeList(res.data));\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Dad Jokes\",\n    page: \"dlj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, loaded ? jokeList.map((j, i) => /*#__PURE__*/React.createElement(Jokecard, {\n    joke: j,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })) : \"\");\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js"],"names":["React","useState","useEffect","Layout","Jokecard","queryURL","JokePage","jokeList","setJokeList","error","setError","loaded","setLoaded","fetch","then","res","data","map","j","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,IAAIC,QAAQ,GAAG,6BAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,GAAoB;AAEjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACR,QAAD,CAAL,CAAgBS,IAAhB,CACIC,GAAG,IAAIP,WAAW,CAACO,GAAG,CAACC,IAAL,CADtB;AAGH,GAJU,CAAT;AAQA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,IAAI,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,GAAEJ,QAAQ,CAACU,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACpB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,CAAhB;AAAmB,IAAA,GAAG,EAAEC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAF,GAEH,EAHN,CADF;AAOD","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nvar queryURL = \"https://icanhazdadjoke.com/\";\n// const jokes = [\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n//   \"Had this one Had this one Had this one Had this one\",\n// ];\nexport default function JokePage() {\n\n  const [jokeList, setJokeList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(queryURL).then(\n        res => setJokeList(res.data)\n    )\n})\n\n \n\n  return (\n    <Layout title=\"Dad Jokes\" page=\"dlj\">\n      {loaded? jokeList.map((j, i) => (\n        <Jokecard joke={j} key={i} />\n      )): \"\"}\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}