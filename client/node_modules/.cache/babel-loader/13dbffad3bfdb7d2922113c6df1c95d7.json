{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/components/userComponents/CreatePostModal/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { postPosts } from \"../../../core/jokeSearch\";\nimport \"./style.css\";\nimport closeIcon from \"../../../assets/images/newicons/closeIcon.svg\"; // getting redux store\n\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"../../../actions\";\nexport default function CreatePostModal({\n  userPostsId,\n  token,\n  curUserName\n}) {\n  // make sure to import dispatch so that you can use the actions.\n  const dispatch = useDispatch();\n  const [textValue, setTextValue] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n  };\n\n  const submitPost = e => {\n    e.preventDefault();\n    const postData = {\n      userName: curUserName,\n      posterId: userPostsId,\n      postText: textValue\n    };\n    postPosts(userPostsId, token, postData);\n    console.log('posting the post');\n    console.log(postData);\n    console.log('posting the post');\n    setTextValue(\"\");\n    setLoaded(false);\n    dispatch(closeModal(false));\n  };\n\n  const formComp = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cp-f-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, !loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cp-f-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"post-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Just like my Daddy used to say...\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"add-post-text-cont\",\n      onSubmit: e => submitPost(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"post-text\",\n      typeof: \"text\",\n      onChange: e => handleTextChange(e),\n      maxLength: \"150\",\n      placeholder: \"Type your Dad joke here...\",\n      value: textValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      typeof: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Post\"))) : \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cp-modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => dispatch(closeModal(false)),\n    className: \"cp-modal-close\",\n    src: closeIcon,\n    alt: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), formComp());\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/components/userComponents/CreatePostModal/index.js"],"names":["React","useState","useEffect","postPosts","useDispatch","closeModal","CreatePostModal","userPostsId","token","curUserName","dispatch","textValue","setTextValue","loaded","setLoaded","handleTextChange","event","target","value","submitPost","e","preventDefault","postData","userName","posterId","postText","console","log","formComp","closeIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAO,aAAP;uEAEA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAzB,EAA8D;AAC3E;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMc,gBAAgB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAEd,WADK;AAEfe,MAAAA,QAAQ,EAAEjB,WAFK;AAGfkB,MAAAA,QAAQ,EAAEd;AAHK,KAAjB;AAKAR,IAAAA,SAAS,CAACI,WAAD,EAAcC,KAAd,EAAqBc,QAArB,CAAT;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAf,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,IAAAA,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,GAfD;;AAgBA,QAAMuB,QAAQ,GAAG,MAAM;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACf,MAAD,gBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,eAEE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,QAAQ,EAAGO,CAAD,IAAOD,UAAU,CAACC,CAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACA,MAAA,SAAS,EAAC,WADV;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,QAAQ,EAAGA,CAAD,IAAOL,gBAAgB,CAACK,CAAD,CAHnC;AAIE,MAAA,SAAS,EAAC,KAJZ;AAKE,MAAA,WAAW,EAAC,4BALd;AAME,MAAA,KAAK,EAAET,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAQ,MAAA,MAAM,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CAFF,CADD,GAeI,EAhBP,CADF;AAoBD,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CADzB;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,GAAG,EAAEwB,SAHP;AAIE,IAAA,GAAG,EAAC,GAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGD,QAAQ,EAPX,CADF;AAWD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { postPosts } from \"../../../core/jokeSearch\";\nimport \"./style.css\";\nimport closeIcon from \"../../../assets/images/newicons/closeIcon.svg\";\n// getting redux store\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"../../../actions\";\n\nexport default function CreatePostModal({ userPostsId, token, curUserName }) {\n  // make sure to import dispatch so that you can use the actions.\n  const dispatch = useDispatch();\n  const [textValue, setTextValue] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n\n  const handleTextChange = (event) => {\n    setTextValue(event.target.value);\n  };\n\n  const submitPost = (e) => {\n    e.preventDefault();\n    const postData = {\n      userName: curUserName,\n      posterId: userPostsId,\n      postText: textValue,\n    };\n    postPosts(userPostsId, token, postData);\n\n    console.log('posting the post')\n    console.log(postData)\n    console.log('posting the post')\n    setTextValue(\"\");\n    setLoaded(false);\n    dispatch(closeModal(false));\n  };\n  const formComp = () => {\n    return (\n      <div className=\"cp-f-cont\">\n        {!loaded ? (\n          <div className=\"cp-f-div\">\n            <h3 className=\"post-title\">Just like my Daddy used to say...</h3>\n            <form className=\"add-post-text-cont\" onSubmit={(e) => submitPost(e)}>\n              <textarea\n              className=\"post-text\"\n                typeof=\"text\"\n                onChange={(e) => handleTextChange(e)}\n                maxLength=\"150\"\n                placeholder=\"Type your Dad joke here...\"\n                value={textValue}\n              ></textarea>\n              <button typeof=\"submit\">Post</button>\n            </form>\n          </div>\n        ) : (\"\")}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"cp-modal-overlay\">\n      <img\n        onClick={() => dispatch(closeModal(false))}\n        className=\"cp-modal-close\"\n        src={closeIcon}\n        alt=\"#\"\n      />\n      {formComp()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}