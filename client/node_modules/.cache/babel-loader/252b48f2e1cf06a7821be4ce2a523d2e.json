{"ast":null,"code":"var _jsxFileName = \"/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nimport { getJokes } from \"../../core/jokeSearch\";\nconst jokes = [\"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\", \"Had this one Had this one Had this one Had this one\"];\nexport default function JokePage() {\n  const [data, setData] = useState({});\n  const [error, setError] = useState(false);\n\n  const loadData = () => {\n    getJokes().then(res => {\n      if (!res) {\n        setError(true);\n      } else {\n        setData(res);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Dad Jokes\",\n    page: \"dlj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, jokes.map((j, i) => /*#__PURE__*/React.createElement(Jokecard, {\n    joke: j,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/pages/JokePage/index.js"],"names":["React","useState","useEffect","Layout","Jokecard","getJokes","jokes","JokePage","data","setData","error","setError","loadData","then","res","map","j","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,MAAMC,KAAK,GAAG,CACZ,qDADY,EAEZ,qDAFY,EAGZ,qDAHY,EAIZ,qDAJY,EAKZ,qDALY,EAMZ,qDANY,EAOZ,qDAPY,EAQZ,qDARY,EASZ,qDATY,EAUZ,qDAVY,CAAd;AAYA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMW,QAAQ,GAAG,MAAM;AACrBP,IAAAA,QAAQ,GAAGQ,IAAX,CAAiBC,GAAD,IAAS;AACvB,UAAI,CAACA,GAAL,EAAU;AACRH,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAFD,MAEO;AACLF,QAAAA,OAAO,CAACK,GAAD,CAAP;AACD;AACF,KAND;AAOD,GARD;;AASAZ,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,QAAQ;AACT,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,IAAI,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACS,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,CAAhB;AAAmB,IAAA,GAAG,EAAEC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport Layout from \"../../components/userComponents/Layout\";\nimport Jokecard from \"../../components/jokeCards\";\nimport { getJokes } from \"../../core/jokeSearch\";\nconst jokes = [\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n  \"Had this one Had this one Had this one Had this one\",\n];\nexport default function JokePage() {\n  const [data, setData] = useState({});\n  const [error, setError] = useState(false);\n  const loadData = () => {\n    getJokes().then((res) => {\n      if (!res) {\n        setError(true);\n      } else {\n        setData(res);\n      }\n    });\n  };\n  useEffect(()=>{\n    loadData();\n  },[])\n  return (\n    <Layout title=\"Dad Jokes\" page=\"dlj\">\n      {jokes.map((j, i) => (\n        <Jokecard joke={j} key={i} />\n      ))}\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}