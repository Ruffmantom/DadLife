{"ast":null,"code":"import { API } from '../config.js';\nexport const signUp = user => {\n  console.log(user);\n  console.log(API); // return fetch(`${API}/signup`, {\n  //     method: \"POST\",\n  //     headers: {\n  //         Accept: 'application/json',\n  //         'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(user)\n  // })\n  //     .then(res => {\n  //         return res.json()\n  //     })\n  //     .catch(err => {\n  //         console.log(err)\n  //     })\n};\nexport const signIn = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getUser = (id, token) => {\n  return fetch(`${API}/user/${id}`, {\n    method: \"GET\",\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const authenticate = (data, next) => {\n  // console.log(data)\n  if (typeof window !== 'undefined') {\n    localStorage.setItem('jwt', JSON.stringify(data));\n    next();\n  }\n};\nexport const signout = next => {\n  if (typeof window !== 'undefined') {\n    localStorage.removeItem('jwt');\n    next();\n    return fetch(`${API}/signout`, {\n      method: \"GET\"\n    }).then(res => {// console.log(\"Signout\", res)\n    }).catch(err => console.log(err));\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == 'undefined') {\n    return false;\n  }\n\n  if (localStorage.getItem('jwt')) {\n    return JSON.parse(localStorage.getItem('jwt'));\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/thomasruff/Development/projects/DadLife/client/src/auth/index.js"],"names":["API","signUp","user","console","log","signIn","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","getUser","id","token","authenticate","data","next","window","localStorage","setItem","signout","removeItem","isAuthenticated","getItem","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAF4B,CAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAjBM;AAkBP,OAAO,MAAMK,MAAM,GAAIH,IAAD,IAAU;AAC5B,SAAOI,KAAK,CAAE,GAAEN,GAAI,SAAR,EAAkB;AAC1BO,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AANoB,GAAlB,CAAL,CAQFW,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAI;AACVd,IAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH,GAbE,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAc;AACjC,SAAOd,KAAK,CAAE,GAAEN,GAAI,SAAQmB,EAAG,EAAnB,EAAsB;AAC9BZ,IAAAA,MAAM,EAAE,KADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,uBAAkB,UAASY,KAAM;AAD5B;AAFqB,GAAtB,CAAL,CAMFP,IANE,CAMGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GARE,EASFC,KATE,CASIC,GAAG,IAAI;AACVd,IAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH,GAXE,CAAP;AAYH,CAbM;AAcP,OAAO,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAc;AACtC;AACA,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4Bf,IAAI,CAACC,SAAL,CAAeU,IAAf,CAA5B;AACAC,IAAAA,IAAI;AACP;AACJ,CANM;AAQP,OAAO,MAAMI,OAAO,GAAIJ,IAAD,IAAS;AAC5B,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,IAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACAL,IAAAA,IAAI;AACJ,WAAOjB,KAAK,CAAE,GAAEN,GAAI,UAAR,EAAmB;AAC3BO,MAAAA,MAAM,EAAC;AADoB,KAAnB,CAAL,CAGNM,IAHM,CAGDC,GAAG,IAAG,CACR;AACH,KALM,EAMNE,KANM,CAMAC,GAAG,IAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CANP,CAAP;AAOH;AACJ,CAZM;AAcP,OAAO,MAAMY,eAAe,GAAG,MAAI;AAC/B,MAAG,OAAOL,MAAP,IAAiB,WAApB,EAAgC;AAC5B,WAAO,KAAP;AACH;;AACD,MAAGC,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAH,EAA+B;AAC3B,WAAOnB,IAAI,CAACoB,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAX,CAAP;AACH,GAFD,MAEM;AACF,WAAO,KAAP;AACH;AACJ,CATM","sourcesContent":["import { API } from '../config.js';\n\nexport const signUp = (user) => {\n    console.log(user);\n    console.log(API);\n    // return fetch(`${API}/signup`, {\n    //     method: \"POST\",\n    //     headers: {\n    //         Accept: 'application/json',\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(user)\n    // })\n    //     .then(res => {\n    //         return res.json()\n    //     })\n    //     .catch(err => {\n    //         console.log(err)\n    //     })\n}\nexport const signIn = (user) => {\n    return fetch(`${API}/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(res => {\n            return res.json()\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\n\nexport const getUser = (id, token) =>{\n    return fetch(`${API}/user/${id}`, {\n        method: \"GET\",\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    })\n        .then(res => {\n            return res.json()\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\nexport const authenticate = (data, next)=>{\n    // console.log(data)\n    if(typeof window !== 'undefined'){\n        localStorage.setItem('jwt', JSON.stringify(data))\n        next()\n    }\n}\n\nexport const signout = (next) =>{\n    if(typeof window !== 'undefined'){\n        localStorage.removeItem('jwt')\n        next();\n        return fetch(`${API}/signout`, {\n            method:\"GET\"\n        })\n        .then(res =>{\n            // console.log(\"Signout\", res)\n        })\n        .catch(err => console.log(err))\n    }\n}\n\nexport const isAuthenticated = ()=>{\n    if(typeof window == 'undefined'){\n        return false\n    } \n    if(localStorage.getItem('jwt')){\n        return JSON.parse(localStorage.getItem('jwt'))\n    } else{\n        return false;\n    }\n}"]},"metadata":{},"sourceType":"module"}